(function() {var implementors = {};
implementors["frame_support_test_compile_pass"] = [{"text":"impl <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a> for <a class=\"struct\" href=\"frame_support_test_compile_pass/struct.Runtime.html\" title=\"struct frame_support_test_compile_pass::Runtime\">Runtime</a>","synthetic":false,"types":["frame_support_test_compile_pass::Runtime"]}];
implementors["node_runtime"] = [{"text":"impl <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a> for <a class=\"struct\" href=\"node_runtime/struct.Runtime.html\" title=\"struct node_runtime::Runtime\">Runtime</a>","synthetic":false,"types":["node_runtime::Runtime"]}];
implementors["node_template_runtime"] = [{"text":"impl <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a> for <a class=\"struct\" href=\"node_template_runtime/struct.Runtime.html\" title=\"struct node_template_runtime::Runtime\">Runtime</a>","synthetic":false,"types":["node_template_runtime::Runtime"]}];
implementors["pallet_bags_list"] = [{"text":"impl <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a> for <a class=\"struct\" href=\"pallet_bags_list/mock/struct.Runtime.html\" title=\"struct pallet_bags_list::mock::Runtime\">Runtime</a>","synthetic":false,"types":["pallet_bags_list::mock::Runtime"]}];
implementors["substrate_test_runtime"] = [{"text":"impl <a class=\"trait\" href=\"frame_system/pallet/trait.Config.html\" title=\"trait frame_system::pallet::Config\">Config</a> for <a class=\"struct\" href=\"substrate_test_runtime/struct.Runtime.html\" title=\"struct substrate_test_runtime::Runtime\">Runtime</a>","synthetic":false,"types":["substrate_test_runtime::Runtime"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()